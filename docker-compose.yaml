version: '3.9'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypass
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"

  pgbouncer:
    image: edoburu/pgbouncer:1.18.0
    ports:
      - "6432:6432"
    environment:
      DB_USER: myuser
      DB_PASSWORD: mypass
      DB_HOST: postgres
      DB_NAME: mydb
      DB_PORT: 5432
    volumes:
      - ./pgbouncer:/etc/pgbouncer
    depends_on:
      - postgres

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  ratelimit:
    image: bitnami/envoy-ratelimit
    ports:
      - "8081:8081"
    volumes:
      - ./ratelimit:/data
    environment:
      - RUNTIME_ROOT=/data
      - RUNTIME_SUBDIRECTORY=.
      - LOG_LEVEL=debug
      - REDIS_SOCKET_TYPE=tcp
      - REDIS_URL=redis:6379
      - USE_STATSD=false
      - STATSD_HOST=localhost
      - STATSD_PORT=8125
    depends_on:
      - redis

  envoy:
    image: envoyproxy/envoy:v1.29-latest
    ports:
      - "6433:6433"
      - "9901:9901"
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    depends_on:
      - pgbouncer
      - ratelimit
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9901/ready"]
      interval: 5s
      timeout: 2s
      retries: 3

  pooled-client:
    build: ./client
    environment:
      TPS: 10
      DB_HOST: envoy
      DB_PORT: 6433
      DB_USER: myuser
      DB_PASSWORD: mypass
      DB_NAME: mydb
      CLIENT_NAME: pooled
      POOL_MIN_SIZE: 40
      POOL_MAX_SIZE: 40
    ports:
      - "8080:8080"
    depends_on:
      - envoy

  direct-client:
    build: ./client
    environment:
      TPS: 10
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: myuser
      DB_PASSWORD: mypass
      DB_NAME: mydb
      CLIENT_NAME: direct
      POOL_MIN_SIZE: 40
      POOL_MAX_SIZE: 40
    ports:
      - "8079:8080"
    depends_on:
      - postgres

  # UI service for controlling the PostgreSQL clients
  ui:
    build: ./ui
    ports:
      - "3000:80"
    depends_on:
      - pooled-client
      - direct-client
    stop_grace_period: 1s

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - envoy
      - postgres

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.14.0
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://myuser:mypass@postgres:5432/mydb?sslmode=disable
    depends_on:
      - postgres

  pgbouncer-exporter:
    image: prometheuscommunity/pgbouncer-exporter:v0.5.1
    ports:
      - "9127:9127"
    command:
      - "--pgBouncer.connectionString=postgres://myuser:mypass@pgbouncer:6432/pgbouncer?sslmode=disable"  
      - "--web.listen-address=:9127"
    depends_on:
      - pgbouncer

volumes:
  prometheus_data:
  grafana_data:
